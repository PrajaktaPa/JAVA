/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.medication;

import business.medication.Medication;
import business.organization.OrganizationDirectory;
import business.patient.Patient;
import business.prescription.Prescription;
import business.userAccount.UserAccount;
import java.awt.CardLayout;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeFormatterBuilder;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Prajakta
 */
public class ManageMedicationJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private OrganizationDirectory organizationDirectory;
    private UserAccount userAccount;
    private Patient patient;
    private Prescription prescription;
    /**
     * Creates new form ManageMedicationJPanel
     */
    public ManageMedicationJPanel(JPanel userProcessContainer, OrganizationDirectory organizationDirectory,UserAccount account) {
        initComponents();
        setSize(1370, 725);
        this.userAccount = account;
        this.userProcessContainer = userProcessContainer;
        this.organizationDirectory = organizationDirectory;
        this.patient = (Patient) userAccount.getPerson();
        
        Date date = new Date();
        Calendar calendar = GregorianCalendar.getInstance(); // creates a new calendar instance
        calendar.setTime(date);   // assigns calendar to given date 
        int hour = calendar.get(Calendar.HOUR_OF_DAY); // gets hour in 24h format
        int minute = calendar.get(Calendar.MINUTE);
        
        if(hour <9){
            radio1.setSelected(true);
        }
        else if(hour>9 && hour < 14){
            radio2.setSelected(true);
        }
        else if(hour>14 && hour <23){
            radio3.setSelected(true);
        }
        datechooser.setDate(date);
        populateComboInsulin();
        if (list1.size().equals("")){
            JOptionPane.showMessageDialog(null, "You have no medicines prescribed. Please visit a doctor.", "Created Successfully", JOptionPane.INFORMATION_MESSAGE);
        }
        populateList1();
       // populateFields();
    }   
    
//    public void populateFields(){
//        
//        for(Map.Entry<Date,Medication> entry : patient.getMedicationHistory().getMedicationMap().entrySet())
//        {
//        Medication medication = entry.getValue();
//     
//        }
//    }
   
    
    public void populateComboInsulin(){
        comboInsulin.removeAllItems();
        comboInsulin.addItem("Yes");
        comboInsulin.addItem("No");
    }

    public void populateList1(){
        DefaultListModel model1 = new DefaultListModel();
        for(Medication medicine : patient.getPrescription().getMedicationList()){
            
            model1.addElement(medicine.getMedicineName());
            list1.setModel(model1);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        radio1 = new javax.swing.JRadioButton();
        radio2 = new javax.swing.JRadioButton();
        radio3 = new javax.swing.JRadioButton();
        lblInsulin = new javax.swing.JLabel();
        comboInsulin = new javax.swing.JComboBox();
        btnBack = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        lblPrescribedMed = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        list1 = new javax.swing.JList();
        btnLToR = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblMedicine = new javax.swing.JTable();
        datechooser = new com.toedter.calendar.JDateChooser();
        lblDate = new javax.swing.JLabel();
        btnMedHistory = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();

        jLabel1.setText("Medication Record");

        buttonGroup1.add(radio1);
        radio1.setText("Morning");

        buttonGroup1.add(radio2);
        radio2.setText("Afternoon");

        buttonGroup1.add(radio3);
        radio3.setText("Evening");

        lblInsulin.setText("Insulin Injection");

        comboInsulin.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lblPrescribedMed.setText("List of Medicines prescribed by Doctor");

        list1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(list1);

        btnLToR.setText(">>");
        btnLToR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLToRActionPerformed(evt);
            }
        });

        tblMedicine.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicine Name", "Time", "Dosage", "Dose category", "Prescribe Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblMedicine);

        lblDate.setText("Select date of tracking");

        btnMedHistory.setText("Show Medication History");
        btnMedHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMedHistoryActionPerformed(evt);
            }
        });

        jLabel3.setText("Welcome");

        jLabel4.setText("Appointment Dashboard");

        jLabel2.setText("<value>");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addGap(189, 189, 189)
                        .addComponent(btnMedHistory)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSave)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblPrescribedMed)
                        .addContainerGap(484, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblDate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(datechooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(radio1)
                                .addGap(10, 10, 10)
                                .addComponent(radio2)
                                .addGap(10, 10, 10)
                                .addComponent(radio3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblInsulin)
                        .addGap(55, 55, 55)
                        .addComponent(comboInsulin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(btnLToR)
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39))))
            .addGroup(layout.createSequentialGroup()
                .addGap(275, 275, 275)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(75, 75, 75)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jLabel1)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(radio1)
                                    .addComponent(radio2)
                                    .addComponent(radio3))
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblInsulin)
                                    .addComponent(comboInsulin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(6, 6, 6)))
                        .addComponent(datechooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblDate))
                .addGap(22, 22, 22)
                .addComponent(lblPrescribedMed)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(btnLToR))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnSave)
                    .addComponent(btnMedHistory))
                .addContainerGap(38, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        Prescription prescription = patient.getMedicationHistory().addPrescription(datechooser.getDate());
        DefaultTableModel model = (DefaultTableModel) tblMedicine.getModel();
        Medication medication;
        DateTimeFormatter parseFormat = new DateTimeFormatterBuilder().appendPattern("H:mm").toFormatter();
        LocalTime localTime ;
        for(int i=0 ;i<model.getRowCount();i++){
             medication = prescription.addMedication();
             medication.setMedicineName((String) model.getValueAt(i, 0));
             
        if(model.getValueAt(i, 1) != null){
        localTime = LocalTime.parse(model.getValueAt(i, 1).toString(), parseFormat);
        medication.setMedicineConsumedTime(localTime);
        }
        else{
            JOptionPane.showMessageDialog(null, "Enter medicine consumed time.", "Created Successfully", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        localTime = LocalTime.parse(model.getValueAt(i, 4).toString(), parseFormat);
        medication.setPrescribedTime(localTime);
       
        medication.setDosageMedicine((int) model.getValueAt(i, 2));
        medication.setMedicineType((String) model.getValueAt(i, 3));
        String medicineType;
        if(radio1.isSelected())
        {
            medicineType = "Morning";
            model.setValueAt(medicineType, i, 3);
            medication.setMedicineType(medicineType);
        }
        else if(radio2.isSelected())
        {
            medicineType = "Afternoon";
            model.setValueAt(medicineType, i, 3);
            medication.setMedicineType(medicineType);
        }
        else if(radio3.isSelected())
        {
            medicineType = "Evening";
            model.setValueAt(medicineType, i, 3);
            medication.setMedicineType(medicineType);
        }
        medication.setDateOfTracking(datechooser.getDate());
        }
        JOptionPane.showMessageDialog(null, "Medication Details saved Successfully", "Created Successfully", JOptionPane.INFORMATION_MESSAGE);
    
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnLToRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLToRActionPerformed
        // TODO add your handling code here:
        int i = 0;
        
        i = list1.getSelectedIndex();
        DefaultListModel model2 =  new DefaultListModel();
        DefaultListModel model1 =  new DefaultListModel();

        if(list1.getModel()!=null && list1.getModel().getSize()>0)
        {
          for(int x=0;x<list1.getModel().getSize();x++)
          {
              model1.addElement(list1.getModel().getElementAt(x));
          }
        }
        list1.setModel(model1);
        
        DefaultTableModel model = (DefaultTableModel) tblMedicine.getModel();
        model.setRowCount(0);
        
        for(Medication medication :  patient.getPrescription().getMedicationList()){
            if(list1.getModel().getElementAt(i).equals(medication.getMedicineName())){
            
            Object[] row = new Object[5];
            row[0] = medication.getMedicineName();
            row[1] = medication.getMedicineConsumedTime();
            row[2] = medication.getDosageMedicine();
            row[3] = medication.getMedicineType();
            row[4] = medication.getPrescribedTime();
            model.addRow(row);
            }
            
        }
        
    }//GEN-LAST:event_btnLToRActionPerformed

    private void btnMedHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMedHistoryActionPerformed
        // TODO add your handling code here:
        MedicationHistoryJPanel medicationHistoryJPanel = new MedicationHistoryJPanel(userProcessContainer, organizationDirectory, userAccount);
        userProcessContainer.add("medicationHistoryJPanel", medicationHistoryJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnMedHistoryActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnLToR;
    private javax.swing.JButton btnMedHistory;
    private javax.swing.JButton btnSave;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox comboInsulin;
    private com.toedter.calendar.JDateChooser datechooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblInsulin;
    private javax.swing.JLabel lblPrescribedMed;
    private javax.swing.JList list1;
    private javax.swing.JRadioButton radio1;
    private javax.swing.JRadioButton radio2;
    private javax.swing.JRadioButton radio3;
    private javax.swing.JTable tblMedicine;
    // End of variables declaration//GEN-END:variables
}
