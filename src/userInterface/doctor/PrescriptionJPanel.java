/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.doctor;

import business.EcoSystem;
import business.enterprise.Enterprise;
import business.medication.Medication;
import business.organization.LabOrganization;
import business.organization.Organization;
import business.organization.OrganizationDirectory;
import business.patient.Patient;
import business.person.Person;
import business.userAccount.UserAccount;
import business.workQueue.LabTestWorkRequest;
import business.workQueue.ReceptionistWorkRequest;
import business.workQueue.WorkRequest;
import java.awt.CardLayout;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeFormatterBuilder;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Prajakta
 */
public class PrescriptionJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private OrganizationDirectory organizationDirectory;
    private Person person;
    private EcoSystem business;
    private Patient patient;
    /**
     * Creates new form PrescriptionJPanel
     */
    public PrescriptionJPanel(JPanel userProcessContainer, OrganizationDirectory organizationDirectory,UserAccount account, Enterprise enterprise,EcoSystem business) {
        initComponents();
        setSize(1370, 725);
        this.userAccount = account;
        this.enterprise = enterprise;
        this.userProcessContainer = userProcessContainer;
        this.organizationDirectory = organizationDirectory;
        this.person = userAccount.getPerson();
        this.business = business;
        populatePatients();
        populatecomboTime();
    }

    public void populatePatients(){
        comboPatient.removeAllItems();
        for(WorkRequest request : userAccount.getWorkQueue().getWorkRequestList())
        {
            if(request instanceof ReceptionistWorkRequest)
            {
                Person selectedPatient = request.getSender().getPerson();
                comboPatient.addItem(selectedPatient);
            }
        }
        
        try{
        populateTableMedicine();
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
        if(txtLabTest != null){
        populateTableLab();
        }
    }
    
    public void populatecomboTime(){
        comboTime.removeAllItems();
        comboTime.addItem("Morning");
        comboTime.addItem("Afternoon");
        comboTime.addItem("Night");
    }
    
    public void populateTableMedicine() throws Exception{
        DefaultTableModel model = (DefaultTableModel) tblMedicine.getModel();
        model.setRowCount(0);
        Object[] row = new Object[4];
        if(comboPatient.getSelectedItem()!=null){
        this.patient = (Patient) comboPatient.getSelectedItem();
        for(Medication medication: patient.getPrescription().getMedicationList()){
            row[0] = medication.getMedicineName();
            row[1] = medication.getPrescribedTime();
            row[2] = medication.getDosageMedicine();
            model.addRow(row);
        }
        }
    }
    
    
    public void populateTableLab(){
        DefaultTableModel model = (DefaultTableModel) tblLab.getModel();
        
        model.setRowCount(0);
        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()){
            if(request instanceof LabTestWorkRequest){
            Object[] row = new Object[4];
            row[0] = request.getMessage();
            row[1] = request.getSender();
            row[2] = request.getReceiver();
            String result = ((LabTestWorkRequest) request).getTestResult();
            row[3] = result == null ? "Waiting" : result;
            
            model.addRow(row);
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblWelcome = new javax.swing.JLabel();
        lblWelcomeValue = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        lblPrescription = new javax.swing.JLabel();
        lblSelect = new javax.swing.JLabel();
        comboPatient = new javax.swing.JComboBox();
        lblMedicineName = new javax.swing.JLabel();
        txtMedicineName = new javax.swing.JTextField();
        btnPrescribe = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtLabTest = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLab = new javax.swing.JTable();
        lblTime = new javax.swing.JLabel();
        comboTime = new javax.swing.JComboBox();
        lblDosage = new javax.swing.JLabel();
        txtDosage = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblMedicine = new javax.swing.JTable();
        lblFrom = new javax.swing.JLabel();
        dateChooser1 = new com.toedter.calendar.JDateChooser();
        lblTo = new javax.swing.JLabel();
        dateChooser2 = new com.toedter.calendar.JDateChooser();
        btnBack = new javax.swing.JButton();

        lblWelcome.setText("Welcome");

        lblWelcomeValue.setText("<value>");

        jLabel1.setText("Doctor Dashboard");

        lblPrescription.setText("Write a Prescription");

        lblSelect.setText("Select a Patient");

        comboPatient.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboPatientActionPerformed(evt);
            }
        });

        lblMedicineName.setText("Medicine Name");

        btnPrescribe.setText("Prescribe");
        btnPrescribe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrescribeActionPerformed(evt);
            }
        });

        jLabel2.setText(" Lab Test Name");

        tblLab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Lab Test Name", "Sender", "Receiver", "Status"
            }
        ));
        jScrollPane1.setViewportView(tblLab);

        lblTime.setText("Select Time");

        comboTime.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblDosage.setText("Dosage");

        tblMedicine.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Medicine Name", "Time of the Day", "Dosage"
            }
        ));
        jScrollPane2.setViewportView(tblMedicine);

        lblFrom.setText("From Date");

        lblTo.setText("To Date");

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMedicineName)
                            .addComponent(lblTime)
                            .addComponent(lblDosage)
                            .addComponent(lblFrom)
                            .addComponent(lblTo))
                        .addGap(68, 68, 68)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dateChooser2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMedicineName, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                            .addComponent(txtDosage)
                            .addComponent(dateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(132, 132, 132)
                        .addComponent(jLabel2)
                        .addGap(52, 52, 52)
                        .addComponent(txtLabTest, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblWelcome)
                        .addGap(74, 74, 74)
                        .addComponent(lblWelcomeValue)
                        .addGap(331, 331, 331)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(79, 79, 79))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblSelect)
                                .addGap(51, 51, 51)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(comboPatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(294, 294, 294)
                        .addComponent(lblPrescription)))
                .addContainerGap(23, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPrescribe)
                .addGap(310, 310, 310))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblWelcome)
                    .addComponent(lblWelcomeValue)
                    .addComponent(jLabel1))
                .addGap(29, 29, 29)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPrescription)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboPatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSelect))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMedicineName)
                            .addComponent(txtMedicineName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTime)
                            .addComponent(comboTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(txtLabTest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDosage)
                            .addComponent(txtDosage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(lblFrom))
                    .addComponent(dateChooser1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTo)
                    .addComponent(dateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPrescribe)
                    .addComponent(btnBack))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void comboPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboPatientActionPerformed
        try {
            // TODO add your handling code here:
            populateTableMedicine();
        } catch (Exception ex) {
            Logger.getLogger(PrescriptionJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        populateTableLab();
        
    }//GEN-LAST:event_comboPatientActionPerformed

    private void btnPrescribeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrescribeActionPerformed
        // TODO add your handling code here:
        
        DateTimeFormatter parseFormat = new DateTimeFormatterBuilder().appendPattern("H:mm").toFormatter();
        Medication medication = patient.getPrescription().addMedication();
        String medicineName = txtMedicineName.getText();
        String medicineTime = comboTime.getSelectedItem().toString();
        String dosage = txtDosage.getText();
        medication.setMedicineName(medicineName);
        medication.setMedicineType(medicineTime);
        medication.setDosageMedicine(Integer.parseInt(dosage));
        
        
        if(medicineTime.equals("Morning")){
            medication.setPrescribedTime(LocalTime.of(9, 0));
            
        }
        else if(medicineTime.equals("Afternoon")){
            medication.setPrescribedTime(LocalTime.of(14, 0));
        }
        else if(medicineTime.equals("Night")){
            medication.setPrescribedTime(LocalTime.of(21, 0));
        }
        
        JOptionPane.showMessageDialog(null, "Medicine Prescribed", "Created Successfully", JOptionPane.INFORMATION_MESSAGE);
        try{
        populateTableMedicine();
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
        
        if(!txtLabTest.getText().equals("")){
            LabTestWorkRequest request = new LabTestWorkRequest();
        this.patient = (Patient) comboPatient.getSelectedItem();
            String message = txtLabTest.getText();
        if(message != null){
        
        request.setMessage(message);
        request.setSender(userAccount);
        request.setStatus("Sent");
       
        }

        Organization org = null;
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof LabOrganization){
                org = organization;
                break;
            }
        }
        if (org!=null){
            org.getWorkQueue().getWorkRequestList().add(request);
            userAccount.getWorkQueue().getWorkRequestList().add(request);
        }
         populateTableLab();
        }
    }//GEN-LAST:event_btnPrescribeActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnPrescribe;
    private javax.swing.JComboBox comboPatient;
    private javax.swing.JComboBox comboTime;
    private com.toedter.calendar.JDateChooser dateChooser1;
    private com.toedter.calendar.JDateChooser dateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblDosage;
    private javax.swing.JLabel lblFrom;
    private javax.swing.JLabel lblMedicineName;
    private javax.swing.JLabel lblPrescription;
    private javax.swing.JLabel lblSelect;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLabel lblTo;
    private javax.swing.JLabel lblWelcome;
    private javax.swing.JLabel lblWelcomeValue;
    private javax.swing.JTable tblLab;
    private javax.swing.JTable tblMedicine;
    private javax.swing.JTextField txtDosage;
    private javax.swing.JTextField txtLabTest;
    private javax.swing.JTextField txtMedicineName;
    // End of variables declaration//GEN-END:variables
}
